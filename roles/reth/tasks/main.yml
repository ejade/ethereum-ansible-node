---
- name: Install system dependencies
  ansible.builtin.apt:
    name:
      - curl
      - build-essential
      - pkg-config
      - libssl-dev
      - git
    state: present
    update_cache: true

- name: Create execution group
  ansible.builtin.group:
    name: "{{ execution_group }}"
    state: present
    system: true

- name: Create execution user
  ansible.builtin.user:
    name: "{{ execution_user }}"
    group: "{{ execution_group }}"
    shell: /bin/false
    system: true
    create_home: false

- name: Create execution directories
  ansible.builtin.file:
    path: "{{ execution_dir }}"
    state: directory
    owner: "{{ execution_user }}"
    group: "{{ execution_group }}"
    mode: '0755'

- name: Create Reth data directory
  ansible.builtin.file:
    path: "{{ reth_data_dir }}"
    state: directory
    owner: "{{ execution_user }}"
    group: "{{ execution_group }}"
    mode: '0755'

- name: Create secrets directory
  ansible.builtin.file:
    path: /secrets
    state: directory
    mode: "0755"
    owner: root
    group: root

- name: Create JWT secret file
  ansible.builtin.shell: |
    openssl rand -hex 32 | tr -d "\n" > /secrets/jwtsecret
  args:
    creates: /secrets/jwtsecret

- name: Set JWT secret file permissions
  ansible.builtin.file:
    path: /secrets/jwtsecret
    mode: "0644"
    owner: root
    group: root

- name: Check if Reth is currently installed
  ansible.builtin.shell: "{{ reth_binary_path }} --version | awk '{print $2}'"
  register: reth_version
  changed_when: false
  failed_when: false

- name: Install reth
  block:
    - name: Get latest reth download URL
      ansible.builtin.shell: |
        RELEASE_URL="https://api.github.com/repos/paradigmxyz/reth/releases/latest"
        BINARIES_URL="$(curl -s $RELEASE_URL | jq -r '.assets[] | select(.name | startswith ("reth")) | .browser_download_url' | grep x86_64-unknown-linux-gnu.tar.gz$)"
        echo $BINARIES_URL
      register: reth_url
      args:
        executable: /bin/bash

    - name: Download reth binary
      ansible.builtin.get_url:
        url: "{{ reth_url.stdout }}"
        dest: /tmp/reth.tar.gz
        mode: "0644"

    - name: Create temporary directory for reth extraction
      ansible.builtin.file:
        path: /tmp/reth-extract
        state: directory
        mode: "0755"

    - name: Extract reth binary
      ansible.builtin.unarchive:
        src: /tmp/reth.tar.gz
        dest: /tmp/reth-extract
        remote_src: true

    - name: Copy reth binary to /usr/local/bin
      ansible.builtin.copy:
        src: "/tmp/reth-extract/reth"
        dest: "{{ reth_binary_path }}"
        mode: "0755"
        remote_src: true
        owner: "{{ execution_user }}"
        group: "{{ execution_group }}"

    - name: Clean up temporary files
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      loop:
        - /tmp/reth.tar.gz
        - /tmp/reth-extract

 # - name: Display version comparison
 # ansible.builtin.debug:
 #   msg:
 #     - "{{ '=' * 60 }}"
 #     - "{{ ' ' * 20 }}üöÄ RETH VERSION CHECK {{ ' ' * 20 }}"
 #     - "{{ '=' * 60 }}"
 #     - "üì¶ Currently installed: {{ current_reth_version.stdout | default('Not installed') }}"
 #     - "üéØ Target version: {{ target_reth_version }}"
 #     - "{{ '=' * 60 }}"

- name: Install or upgrade Reth
  block:
    - name: Check if execution service exists
      ansible.builtin.shell: systemctl list-unit-files execution.service --no-legend
      register: execution_service_check
      changed_when: false
      failed_when: false

    - name: Stop execution service if running
      ansible.builtin.systemd:
        name: execution
        state: stopped
      when: execution_service_check.stdout != ""

    - name: Verify Reth installation
      ansible.builtin.shell: "{{ reth_binary_path }} --version | awk '{print $2}'"
      register: new_reth_version
      changed_when: false

    - name: Display installation result
      ansible.builtin.debug:
        msg:
          - "{{ '=' * 60 }}"
          - "{{ ' ' * 20 }}‚úÖ RETH INSTALLATION COMPLETE {{ ' ' * 20 }}"
          - "{{ '=' * 60 }}"
         # - "üì¶ Previous version: {{ current_reth_version.stdout | default('None') }}"
         # - "üÜï New version: {{ new_reth_version.stdout }}"
          - "üìç Binary location: {{ reth_binary_path }}"
          - "{{ '=' * 60 }}"

- name: Create systemd service for Reth
  ansible.builtin.template:
    src: execution.service.j2
    dest: "/etc/systemd/system/execution.service"
    mode: '0644'
    owner: root
    group: root

- name: Reload systemd daemon
  ansible.builtin.systemd:
    daemon_reload: true

- name: Enable and start Reth service
  ansible.builtin.systemd:
    name: "execution"
    state: started
    enabled: true

- name: Wait for Reth to start
  ansible.builtin.wait_for:
    port: 8545
    host: "127.0.0.1"
    delay: 5
    timeout: 60

- name: Verify Reth is running
  ansible.builtin.uri:
    url: "http://127.0.0.1:8545"
    method: POST
    body_format: json
    body: |
      {
        "jsonrpc": "2.0",
        "method": "eth_blockNumber",
        "params": [],
        "id": 1
      }
    return_content: true
  register: reth_health_check
  failed_when: false

- name: Display final status
  ansible.builtin.debug:
    msg:
      - "{{ '=' * 60 }}"
      - "{{ ' ' * 20 }}üéâ RETH SETUP COMPLETE {{ ' ' * 20 }}"
      - "{{ '=' * 60 }}"
      - "‚úÖ Service status: {{ 'Running' if reth_health_check.status == 200 else 'Not responding' }}"
      - "üåê HTTP endpoint: http://127.0.0.1:8545"
      - "üîå WebSocket endpoint: ws://127.0.0.1:8546"
      - "üìä Metrics endpoint: http://127.0.0.1:9001"
      - "üìÅ Data directory: {{ reth_data_dir }}"
      - "{{ '=' * 60 }}"

# - name: Check Versions
#  import_tasks: version.yml
#  tags: [version_check]

- name: Check Status
  import_tasks: check_status.yml
  tags: [status_check]

- name: uninstall reth
  import_tasks: uninstall.yml
  tags: [uninstall]