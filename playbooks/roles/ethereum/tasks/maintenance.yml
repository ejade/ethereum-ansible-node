---
- name: Fetch execution client (Geth/Reth) version
  ansible.builtin.shell: |
    {% if execution_client == 'geth' %}
    /usr/local/bin/geth version | grep ^Version | awk '{print $2}'
    {% elif execution_client == 'reth' %}
    /root/.cargo/bin/reth --version | awk '{print $2}'
    {% endif %}
  register: execution_client_version
  changed_when: false
  failed_when: false
  become: true
  become_user: "{{ execution_user }}"

- name: Fetch consensus client (Lighthouse) version
  ansible.builtin.shell: |
    {% if consensus_client == 'lighthouse' %}
    /usr/local/bin/lighthouse --version | head -n 1 | awk '{print $2}'
    {% endif %}
  register: consensus_client_version
  changed_when: false
  failed_when: false
  become: true
  become_user: "{{ consensus_user }}"

- name: Display client versions
  ansible.builtin.debug:
    msg: |
      Execution client ({{ execution_client }}): {{ execution_client_version.stdout | default('Not installed') }}
      Consensus client ({{ consensus_client }}): {{ consensus_client_version.stdout | default('Not installed') }}

- name: Check service status
  ansible.builtin.systemd:
    name: "{{ item }}"
  register: service_status
  loop:
    - execution
    - consensus
  check_mode: true
  changed_when: false
  failed_when: false

- name: Display service status
  ansible.builtin.debug:
    msg: |
      Service '{{ item.item }}' status: {{ 'Running' if item.status.ActiveState == 'active' else 'Not running' }} 
      Last started: {{ item.status.ExecMainStartTimestamp | default('N/A') }}
      Main PID: {{ item.status.MainPID | default('N/A') }}
  loop: "{{ service_status.results }}"
  when: item.status is defined

- name: Check disk space
  ansible.builtin.shell: |
    df -h {{ execution_dir }} {{ consensus_dir }} | tail -n +2
  register: disk_space
  changed_when: false
  failed_when: false

- name: Display disk space information
  ansible.builtin.debug:
    msg: |
      Disk space information:
      {{ disk_space.stdout }}

- name: Check sync status (Execution client)
  ansible.builtin.uri:
    url: "http://localhost:8545"
    method: POST
    body_format: json
    body: |
      {
        "jsonrpc": "2.0", 
        "method": "eth_syncing", 
        "params": [], 
        "id": 1
      }
    return_content: true
  register: execution_sync_status
  failed_when: false
  changed_when: false
  when: execution_client == 'geth' or execution_client == 'reth'

- name: Display execution client sync status
  ansible.builtin.debug:
    msg: "{{ 'Execution client is synced' if execution_sync_status.json.result == false else 'Execution client is syncing: ' + (execution_sync_status.json.result | to_nice_json) }}"
  when: execution_sync_status.status is defined and execution_sync_status.status == 200

- name: Check JWT file
  ansible.builtin.stat:
    path: /secrets/jwtsecret
  register: jwt_file

- name: Display JWT file status
  ansible.builtin.debug:
    msg: "JWT secret file exists: {{ jwt_file.stat.exists }}, last modified: {{ jwt_file.stat.mtime | default('N/A') }}" 